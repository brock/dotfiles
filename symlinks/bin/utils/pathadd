#!/usr/bin/env zsh
# pathadd - adds a directory to the PATH if it is not already in the PATH and the directory exists
# Usage: pathadd the_new_directory
# Note: you can use relative or full paths. This script will resolve them.
# https://superuser.com/questions/39751/add-directory-to-path-if-its-not-already-there?rq=1

directory=${1%/}
dotfiles=~/dotfiles

source ~/dotfiles/exports/path/PATH.sh

# https://www.baeldung.com/linux/absolute-directory-of-file
DIRECTORY_TO_ADD=$(readlink -f $directory)

if [[ ! -d ${DIRECTORY_TO_ADD} ]]; then
    echo "${directory} is not a real directory"
    exit 1
fi

if [[ ":$PATH:" != *":${DIRECTORY_TO_ADD}:"* ]]; then
    echo "Adding ${DIRECTORY_TO_ADD} to PATH"

    # The format ${PATH:+"$PATH:"} is a bit archaic. It is essentially this: ${variable:+variable} 
    # which is a way to set a default value if a variable does not exist yet
    # The important part is that we're doing this: ${variable:+variable}${DIRECTORY_TO_ADD} 
    #which is where the new directory gets added to the PATH
    PATH="${PATH:+"$PATH:"}${DIRECTORY_TO_ADD}"

    echo "# auto-generated by dotfiles." > $dotfiles/exports/path/PATH.sh
    echo "# See the pathadd function at $dotfiles/symlinks/bin/utils/pathadd" >> $dotfiles/exports/path/PATH.sh
    echo "" >> $dotfiles/exports/path/PATH.sh
    echo "export PATH=$PATH" >> ~/dotfiles/exports/path/PATH.sh

    # The path install script at exports/path/install.sh sets MANUAL_PATHADD so we don't add all the 
    # directories in exports/path/*.sh to the 99_tmp.sh file.
    # If you're calling pathadd from the command line, this value won't be set, so we will add the
    # new directory to 99_tmp.sh for you to review.
    if [[ -z $MANUAL_PATHADD ]]; then
        echo "Adding ${DIRECTORY_TO_ADD} to ~/dotfiles/exports/path/99_tmp.sh file for review"
        echo ${DIRECTORY_TO_ADD} >> ~/dotfiles/exports/path/99_tmp.sh
    fi    
fi
